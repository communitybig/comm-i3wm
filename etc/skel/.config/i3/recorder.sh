#!/usr/bin/env bash

# Diret√≥rio para salvar as grava√ß√µes
DIR="$(xdg-user-dir VIDEOS)"
[[ ! -d "$DIR" ]] && mkdir -p "$DIR"

# Arquivo para armazenar temporariamente o nome do arquivo de grava√ß√£o
TEMP_FILE="/tmp/ffmpeg-recorder-filename"
STATUS_FILE="/tmp/ffmpeg-recorder-status"

# Fun√ß√£o de limpeza para parar a grava√ß√£o e converter o v√≠deo
stop_recording() {
    if pgrep -x "ffmpeg" > /dev/null; then
        # Mata o processo ffmpeg com SIGINT para finalizar corretamente
        pkill --signal SIGINT ffmpeg
        notify-send "üìπ Grava√ß√£o encerrada" "Processando o v√≠deo..."
        
        # Espera o ffmpeg finalizar completamente
        while pgrep -x "ffmpeg" > /dev/null; do
            sleep 0.5
        done
        
        if [[ -f "$TEMP_FILE" ]]; then
            MKV_FILE=$(cat "$TEMP_FILE")
            MP4_FILE="${MKV_FILE%.mkv}.mp4"
        else
            notify-send "‚ùå Erro" "Arquivo de grava√ß√£o n√£o encontrado!"
            rm -f "$STATUS_FILE"
            exit 1
        fi

        if [[ -f "$MKV_FILE" ]]; then
            notify-send "üì¶ Compactando v√≠deo..." "Aguarde..."
            
            # Converte o arquivo MKV para MP4 com melhor compress√£o
            ffmpeg -i "$MKV_FILE" -c:v libx264 -preset fast -crf 28 -pix_fmt yuv420p -threads "$(nproc)" -y "$MP4_FILE" && {
                notify-send "‚úÖ V√≠deo salvo!" "Arquivo: $MP4_FILE"
                echo "‚úî V√≠deo salvo: $MP4_FILE"
                
                # Copia o caminho do v√≠deo para a √°rea de transfer√™ncia
                echo -n "$MP4_FILE" | xclip -selection clipboard
                rm -f "$MKV_FILE"
            }
        else
            notify-send "‚ùå Erro" "Arquivo de grava√ß√£o n√£o encontrado!"
        fi
        
        # Remove arquivos tempor√°rios
        rm -f "$TEMP_FILE" "$STATUS_FILE"
    fi
}

# Verifica se j√° est√° gravando
if [[ -f "$STATUS_FILE" ]]; then
    stop_recording
    exit 0
fi

# Se n√£o est√° gravando, mostra o menu de sele√ß√£o do modo de grava√ß√£o
SELECTION=$(echo -e "üñ•Ô∏è Gravar Tela Inteira\nüé• Gravar Janela Ativa\nüéØ Gravar Sele√ß√£o\nüéôÔ∏è Gravar Tela Com √Åudio" | rofi -dmenu -i -no-show-icons -l 4 -width 30 -p "üìπ Escolha o modo")

# Fun√ß√£o para iniciar grava√ß√£o
start_recording() {
    local CMD="$1"
    local DESCRIPTION="$2"
    
    # Cria o arquivo de status para indicar que est√° gravando
    touch "$STATUS_FILE"
    
    # Executa o comando de grava√ß√£o
    eval "$CMD" &
    
    # Notifica o usu√°rio
    notify-send "üìπ $DESCRIPTION" "Pressione '$mod + o' para parar."
}

case "$SELECTION" in
    "üñ•Ô∏è Gravar Tela Inteira")
        # Obt√©m informa√ß√µes da tela principal
        RESOLUTION=$(xrandr --current | grep -oP '(?<=current ).*(?=,)' | awk '{print $1"x"$3}')
        
        # Define o arquivo de sa√≠da
        MKV_FILE="$DIR/recording_$(date +'%Y-%m-%d_%H-%M-%S').mkv"
        echo "$MKV_FILE" > "$TEMP_FILE"
        
        # Inicia a grava√ß√£o da tela inteira
        CMD="ffmpeg -f x11grab -video_size $RESOLUTION -i :0.0 -c:v libx264 -preset ultrafast -qp 0 \"$MKV_FILE\""
        start_recording "$CMD" "Gravando Tela Inteira"
        ;;
        
    "üé• Gravar Janela Ativa")
        # Obt√©m o ID da janela ativa
        WIN_ID=$(xprop -root | awk '/_NET_ACTIVE_WINDOW\(WINDOW\)/{print $NF}')
        
        # Obt√©m geometria da janela
        GEOM=$(xwininfo -id "$WIN_ID" | awk '
            /Absolute upper-left X:/ {x=$NF}
            /Absolute upper-left Y:/ {y=$NF}
            /Width:/ {w=$NF}
            /Height:/ {h=$NF}
            END {print x "," y "," w "," h}')
        
        IFS=',' read -r X Y W H <<< "$GEOM"
        
        # Define o arquivo de sa√≠da
        MKV_FILE="$DIR/recording_$(date +'%Y-%m-%d_%H-%M-%S').mkv"
        echo "$MKV_FILE" > "$TEMP_FILE"
        
        # Inicia a grava√ß√£o da janela ativa
        CMD="ffmpeg -f x11grab -video_size ${W}x${H} -i :0.0+${X},${Y} -c:v libx264 -preset ultrafast -qp 0 \"$MKV_FILE\""
        start_recording "$CMD" "Gravando Janela Ativa"
        ;;
        
    "üéØ Gravar Sele√ß√£o")
        # Usa slop para permitir a sele√ß√£o da √°rea
        GEOM=$(slop -f "%x,%y,%w,%h")
        if [[ -z "$GEOM" ]]; then
            notify-send "‚ùå Cancelado" "Nenhuma √°rea selecionada."
            exit 0
        fi
        
        IFS=',' read -r X Y W H <<< "$GEOM"
        
        # Define o arquivo de sa√≠da
        MKV_FILE="$DIR/recording_$(date +'%Y-%m-%d_%H-%M-%S').mkv"
        echo "$MKV_FILE" > "$TEMP_FILE"
        
        # Inicia a grava√ß√£o da √°rea selecionada
        CMD="ffmpeg -f x11grab -video_size ${W}x${H} -i :0.0+${X},${Y} -c:v libx264 -preset ultrafast -qp 0 \"$MKV_FILE\""
        start_recording "$CMD" "Gravando √Årea Selecionada"
        ;;
        
    "üéôÔ∏è Gravar Tela Com √Åudio")
        # Obt√©m informa√ß√µes da tela principal
        RESOLUTION=$(xrandr --current | grep -oP '(?<=current ).*(?=,)' | awk '{print $1"x"$3}')
        
        # Define o arquivo de sa√≠da
        MKV_FILE="$DIR/recording_$(date +'%Y-%m-%d_%H-%M-%S').mkv"
        echo "$MKV_FILE" > "$TEMP_FILE"
        
        # Inicia a grava√ß√£o da tela com √°udio
        CMD="ffmpeg -f x11grab -video_size $RESOLUTION -i :0.0 -f pulse -i default -c:v libx264 -preset ultrafast -c:a aac -b:a 128k \"$MKV_FILE\""
        start_recording "$CMD" "Gravando Tela Com √Åudio"
        ;;
        
    *)
        notify-send "‚ùå Cancelado" "Nenhuma a√ß√£o foi selecionada."
        exit 0
        ;;
esac
